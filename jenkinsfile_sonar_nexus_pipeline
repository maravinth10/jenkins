pipeline
{
         agent any

         environment{
	  nginx_ip="192.168.56.11";
	  def mvnHome =  tool name: 'maven3', type: 'maven';
	  }

stages
{


 	stage('Aravinth SCM Checkout'){
	 steps{
         git 'https://github.com/maravinth10/website_old.git'
         }}

    	stage('Aravinth Compile-Package'){
	 steps{
         sh "${mvnHome}/bin/mvn clean package"
         sh 'mv target/myweb*.war target/newapp.war'
         }}

        stage('Aravinth SonarQube Analysis'){
	 steps{
         withSonarQubeEnv('sonar'){
         sh "${mvnHome}/bin/mvn sonar:sonar"
         }}}

        stage('Aravinth Docker compose File copy'){
	 steps{
         sh 'scp -i /var/lib/jenkins/mumbai_linux_pem.pem -o StrictHostKeyChecking=no  docker-compose.yml ec2-user@${nginx_ip}:/home/ec2-user'
         }}

        stage('Aravinth Remove Previous Container'){
	 steps{
	     script {
         try {
         sh 'ssh -i /var/lib/jenkins/mumbai_linux_pem.pem -o StrictHostKeyChecking=no -tt ec2-user@${nginx_ip} docker rm -f ara_tomcat'
         } 
        catch (err) {
            echo err.getMessage()
            echo "Error detected, but we will continue."
        }}}}

        stage('Aravinth Build Docker Imager'){
	 steps{
         sh 'ssh -i /var/lib/jenkins/mumbai_linux_pem.pem -o StrictHostKeyChecking=no -tt ec2-user@${nginx_ip} docker compose up -d'
    	 }}

        stage('Aravinth Docker Image Push'){
	 steps{
         withCredentials([string(credentialsId: 'dockerPass', variable: 'dockerPassword')]){
         sh "docker login -u jjaba -p ${dockerPassword}"
         }
         sh 'docker push jjaba/myweb:0.0.2'
         }}

       stage('Aravinth Nexus Image Push') {
	steps {
        sh "docker login -u admin -p Admin@123 ubuntunexus.local:8087"
        sh "docker tag jjaba/myweb:0.0.2 ubuntunexus.local:8087/jjaba:1.0.0"
        sh 'docker push ubuntunexus.local:8087/jjaba:1.0.0'
        }}

}}
